version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.1.3
  aws-cli: circleci/aws-cli@2.0.6
  kubernetes: circleci/kubernetes@1.3.1

jobs:
  init_env:
    docker:
      - image: continuumio/miniconda3:22.11.1

    steps:
      - checkout
      # create virtual env and install dependencies
      - run:
          name: install dependencies
          command: |
            apt-get update && apt-get install make curl -y
            make set_env
            make install_kube_deps
            conda info --envs
      - run:
          name: run lint
          command: |
            conda info --envs
            source activate dash_avocado
            pip install pylint pylint_flask
            make lint 


  create_set_infra:
    docker:
      - image: continuumio/miniconda3:22.11.1
    
    executor: aws-cli/default

    steps:
      - checkout
      - run:
          name: install make and curl
          command: |
            apt-get update && apt-get install make curl zip unzip -y
            make install_kube_deps
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      # create virtual env and install dependencies
      - run:
          name: set infra
          command: |
            make create-cluster


  application-deployment:
      docker:
        - image: cimg/base:stable


      steps:
        - checkout
        - kubernetes/install-kubectl

        # create virtual env and install dependencies
        - aws-cli/setup:
            aws-access-key-id: AWS_ACCESS_KEY_ID
            aws-secret-access-key: AWS_SECRET_ACCESS_KEY
            aws-region: AWS_REGION
        - run:
            name: set infra
            command: |
              aws eks update-kubeconfig --region ${AWS_REGION}  --name ${EKS_CLUSTER_NAME}
              make deploy_app


  update-deployment:
      docker:
        - image: cimg/base:stable


      steps:
        - checkout
        - kubernetes/install-kubectl

        # create virtual env and install dependencies
        - aws-cli/setup:
            aws-access-key-id: AWS_ACCESS_KEY_ID
            aws-secret-access-key: AWS_SECRET_ACCESS_KEY
            aws-region: AWS_REGION
        - run:
            name: set infra
            command: |
              aws eks update-kubeconfig --region ${AWS_REGION}  --name ${EKS_CLUSTER_NAME}
              make update_app


workflows:
  default:
    jobs:
      - init_env
      - aws-ecr/build-and-push-image:
          context: aws-dev
          create-repo: false
          dockerfile: Dockerfile
          path: .
          repo: capstone
          tag: "green"
          requires:
                - init_env
      - create_set_infra:
          context: aws-dev
      - application-deployment:
          context: aws-dev
          requires:
            - create_set_infra
      - update-deployment:
          context: aws-dev
          requires:
            - application-deployment
            - aws-ecr/build-and-push-image
